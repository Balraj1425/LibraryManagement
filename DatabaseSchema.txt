Library Management System:

Database name
collections
document schema

User Table
collection Name: userDetails

	details of admin , staff and users
	1. username
	2. typeOfUser ( admin, staff, normal)
	3. userID (auto generated by Mongo)
	4. email
	5. address
	6. phone no
	7. password
	8. accessToken
	
document Schema:
{
	username: {
		type: String,
		require: true
	},
	userType: {
		type: String,
		require: true
	},
	userID: {
		type: String,
		require: true
	},
	email: {
		type: String,
		require: true
	},
	address: {
		type: String,
		require: true
	},
	phoneNo: {
		type: Number,
		require: true
	},
	password: {
		type: String,
		require: true
	},
	accessToken: {
		type: String
	}
}		
	
Books Repository DB:
	1. Book name
	2. Book id (auto generated by mongo)
	3. Author name
	4. Status
	5. Search keywords array
	6. Type of book (fiction/thriller/action)
	7. Publisher name

Collection Name : BooksRepo	
Book Repo Schema:
{
	bookName: {
		type: String,
		require: true
	},
	bookId: {
		type: String,
		require: true
	},
	author: {
		type: String,
		require: true
	},
	status: {
		type: Boolean,
		require: true
	},
	searchKey: {
		type: array,
		require:true
	},
	bookType: {
		type: String,
		require: true
	},
	publisher: {
		type: String,
		require: true
	}
}

	
Booking Details:
	1. Book id (from booksRepo)
	2. user id (from userDetails)
	3. date of booking
	4. return date
	5. late fee
	6. duration of booking

	
Collection Name: bookingDetails
Document schema:
{
	bookId: {
		type: String,
		require: true
	},
	userId:  {
		type: String,
		require: true
	},
	issueDate: {
		type: Date,
		require: true
	},
	returnDate: {
		type: Date,
		require: true
	},
	lateFee: {
		type: Number,
		require: true
	},
	durationOfBooking: {
		type: String,
		require: true
	},
	allotedBy: {
		type: String
		require: true
	},
	returnStatus: {
		type: Boolean
	},
	approvalStatus: {
		type: Boolean
	},
	bookRent:{
		type:Number,
		require: true
	},
	remarks: {
		type: String,
	}	
}

Collection Name: staffAccessApprovalRequests
	1. username
	2. typeOfUser ( admin, staff, normal)
	3. userID (auto generated by Mongo)
	4. email
	5. address
	6. phone no
	7. password 
	8. ApprovalStatus 

DocumentSchema:
{
	username: {
		type: String,
		require: true
	},
	userType: {
		type: String,
		require: true
	},
	userID: {
		type: String,
		require: true
	},
	email: {
		type: String,
		require: true
	},
	address: {
		type: String,
		require: true
	},
	phoneNo: {
		type: Number,
		require: true
	},
	password: {
		type: String,
		require: true
	},
	approvalStatus: {
		type: Boolean,
	}
}	